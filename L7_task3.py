# Реализовать программу работы с органическими клетками. Необходимо создать класс Клетка.
# В его конструкторе инициализировать параметр, соответствующий количеству клеток (целое число).

# В классе должны быть реализованы методы перегрузки арифметических операторов: сложение (__add__()), вычитание (__sub__()),
# умножение (__mul__()), деление (__floordiv__()).
#
# Данные методы должны применяться только к клеткам и выполнять увеличение, уменьшение,
# умножение и обычное (не целочисленное) деление клеток, соответственно. В методе деления должно осуществляться округление значения до целого числа.

# Сложение. Объединение двух клеток. При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух клеток.

# Вычитание. Участвуют две клетки. Операцию необходимо выполнять только если разность количества ячеек двух клеток больше нуля,
# иначе выводить соответствующее сообщение.

# Умножение. Создается общая клетка из двух. Число ячеек общей клетки определяется как произведение количества ячеек этих двух клеток.

# Деление. Создается общая клетка из двух. Число ячеек общей клетки определяется как целочисленное деление количества ячеек этих двух клеток.

# В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.
# Данный метод позволяет организовать ячейки по рядам.
# Метод должен возвращать строку вида *****\n*****\n*****..., где количество ячеек между \n равно переданному аргументу.
# Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.
# Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5. Тогда метод make_order() вернет строку: *****\n*****\n**.
# Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5. Тогда метод make_order() вернет строку: *****\n*****\n*****.


class Cell:
    def __init__(self, number):
        self.number = int(number)

    def __add__(self, other):
        print(f"Sum of 2 cells: {self.number + other.number}")

    def __sub__(self, other):
        substr = self.number - other.number
        print(f'Substrate of 2 cells: {substr}' if substr > 0 else '<0 error')

    def __mul__(self, other):
        print(f"Product of 2 cells: {self.number * other.number}")

    def __floordiv__(self, other):
        print(f"Quotient of 2 cells: {self.number // other.number}")

    def make_order(self, row):
        order = ""
        for i in range(self.number // row):
            order += "*" * row + "\n"
        order += "*" * (self.number % row) + "\n"
        print(order)


cell_1 = Cell(16)
cell_2 = Cell(12)

cell_1 + cell_2
cell_1 - cell_2
cell_1 // cell_2
cell_1 * cell_2

<<<<<<< HEAD
cell_1.make_order(5)
=======
cell_1.make_order(5)
>>>>>>> lesson7
